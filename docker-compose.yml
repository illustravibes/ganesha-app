version: "3"

services:
    app:
        build:
            context: .
            dockerfile: docker/Dockerfile
        container_name: filament_app
        restart: unless-stopped
        working_dir: /var/www/html
        volumes:
            # Use more selective volume mounts to prevent overwriting container changes
            - ./:/var/www/html:cached
            - /var/www/html/vendor
            - /var/www/html/storage
            - /var/www/html/bootstrap/cache
            - composer_cache:/var/www/.composer
        environment:
            - APP_ENV=${APP_ENV:-production}
            - APP_DEBUG=${APP_DEBUG:-false}
        networks:
            - filament_network
        depends_on:
            - db

    nginx:
        image: nginx:alpine
        container_name: filament_nginx
        restart: unless-stopped
        ports:
            - "80:80"
            - "443:443"  # Added for HTTPS support
        volumes:
            - ./:/var/www/html:cached
            - /var/www/html/vendor
            - /var/www/html/storage
            - ./docker/nginx/conf.d:/etc/nginx/conf.d
            # - ./docker/nginx/ssl:/etc/nginx/ssl  # Uncomment when you have SSL certificates
        networks:
            - filament_network
        depends_on:
            - app

    db:
        image: postgres:14
        container_name: filament_db
        restart: unless-stopped
        environment:
            POSTGRES_DB: ${DB_DATABASE:-ganesha-app}
            POSTGRES_USER: ${DB_USERNAME:-postgres}
            POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
            POSTGRES_HOST_AUTH_METHOD: trust
        volumes:
            - postgres_data:/var/lib/postgresql/data
        ports:
            - "127.0.0.1:54321:5432"  # Restrict to localhost access only
        networks:
            - filament_network
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 10s
            timeout: 5s
            retries: 5

networks:
    filament_network:
        driver: bridge

volumes:
    postgres_data:
    composer_cache: